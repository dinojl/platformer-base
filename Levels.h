#pragma once

namespace lvl {
	struct Level {
		Level(std::string Map, int Width, int Height, int PlayerX = 0, int PlayerY = 0, std::string NextLevelID = "", bool PlayerDir = true) {


			// Dynamically allocate memory for map
			char* temp = new char[Width * Height];
			memset(temp, 0, Width * Height * sizeof(char));
			

			// Convert string into 2d array
			for (int y = 0; y < Height; y++) {
				for (int x = 0; x < Width; x++) {
					char c = Map[y * Width + x];
					temp[y * Width + x] = c;
				}
			}

			cMap = temp;

			// Assign other constants
			nWidth = Width;
			nHeight = Height;
			nPlayerX = PlayerX;
			nPlayerY = PlayerY;
			bPlayerDir = PlayerDir;
			sNextLevelID = NextLevelID;
		}

		Level() {}

		char* cMap = nullptr;
		int nWidth = 0;
		int nHeight = 0;
		int nPlayerX = 0;
		int nPlayerY = 0;
		bool bPlayerDir = true;
		std::string sNextLevelID = "";
		std::string sID = "";
	};

	
	
	std::map<std::string, Level> init() {

		std::map<std::string, Level> Manifest;

		// Start
		Manifest.insert(std::pair<std::string, Level>("Start", Level((
			"..........................................................................." 
			"..........................................................................."
			"..........................................................................."
			"..........................................................................."
			"..........................................................................."
			"..........................................................................."
			"..........................................................................."
			"..........................................................................."
			"..........................................................................."
			"..........................................................................."
			"..........................................................................."
			"...................................................B?B....................."
			"..........................................................................."
			"..........................................................................."
			"................................................BBBBBBBBBB................l"
			"........x..............o...........p......................................L"
			"##################..##########################..............###############"
			"##################..##########################..............###############"
			"##################..##########################..............###############"
			"##################..##########################..............###############"), 75, 20, 1, 1, "Cave")));

		// Cave
		Manifest.insert(std::pair<std::string, Level>("Cave", Level((
			"................................................................"
			"................................................................"
			"................................................................"
			"................................................................"
			"................................................................"
			"................................................................"
			"................................................................"
			"................................................................"
			"................................................................"
			".....................................oo........................."
			"....................................B??B........................"
			"............................##.................................."
			"#######################............#######......................"
			"#####################..........................................."
			"###################............................................."
			"#################..............................................."
			"###############................................................."
			"#############..................................................l"
			"###########....................................................L"
			"##########..............................BBBBBBBBBxxxxxxxBBBBBBBB"
			"#########......o......................xxBBBBBBBBBBBBBBBBBBBBBBBB"
			"##########....ooo....................xBBBBBBBBBBBBBBBBBBBBBBBBBB"
			"###########..oopoo...............o.xxBBBBBBBBBBBBBBBBBBBBBBBBBBB"
			"####################...........bBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB"), 64, 24, 1, 1, "lvl3")));

		// Lvl 3
		Manifest.insert(std::pair<std::string, Level>("lvl3", Level((
			"....e......................................................................"
			"....E......................................................................"
			"....BBBBBBB.......................................BBBBBBBBB................"
			"..........................................................................."
			"............BBBBBBBB................BBBBBBBBBB...............BBBB.........."
			"....................................................................o......"
			".....................BBBBBBBBBBB......................BBBBB................"
			"......................................................................o...."
			".............................................................BBBB.........."
			"..........................?............................................o..."
			"..................................................BBBBBBBBB................"
			".......................................................................o..."
			".................#####.BB...........BBBBBBBBBBB.......................ooo.."
			"................######...............................................ooooo."
			"...............#######........########x####################################"
			"..............########........#############################################"
			"#########################.....#############################################"
			"#########################.....#############################################"
			"#########################.....#############################################"
			"#########################.....#############################################"), 75, 20, 1, 1, "")));



		return Manifest;
	}

	
}
